name: Cache Warmup

on:
  schedule:
    - cron: '0 1 * * *'  # 每天凌晨1点预热缓存
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  warmup-cache:
    name: Warmup Build Cache
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.platform != 'linux/amd64'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get platform arch
        id: platform
        run: |
          case "${{ matrix.platform }}" in
            "linux/amd64") echo "arch=amd64" >> $GITHUB_OUTPUT ;;
            "linux/arm64") echo "arch=arm64" >> $GITHUB_OUTPUT ;;
            "linux/arm/v7") echo "arch=armv7" >> $GITHUB_OUTPUT ;;
          esac

      - name: Build for cache warmup
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: false
          cache-from: type=gha,scope=${{ steps.platform.outputs.arch }}
          cache-to: type=gha,mode=max,scope=${{ steps.platform.outputs.arch }}
          build-args: |
            BUILDTIME=${{ github.event.repository.updated_at }}
            VERSION=cache-warmup
            REVISION=${{ github.sha }}

      - name: Cache status
        run: |
          echo "🔥 缓存预热完成 - ${{ matrix.platform }}"
          echo "📊 缓存范围: ${{ steps.platform.outputs.arch }}"