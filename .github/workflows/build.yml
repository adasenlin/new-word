name: Quick Build

on:
  push:
    branches: [ main, develop, feature/* ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  quick-build:
    name: Quick Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        id: branch
        run: |
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}
          else
            BRANCH=${GITHUB_REF#refs/}
          fi
          # 替换特殊字符为连字符
          BRANCH=$(echo $BRANCH | sed 's/[^a-zA-Z0-9]/-/g')
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "short-sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.branch.outputs.branch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.branch.outputs.branch }}-${{ steps.branch.outputs.short-sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ github.event.head_commit.timestamp }}
            VERSION=${{ steps.branch.outputs.branch }}-${{ steps.branch.outputs.short-sha }}
            REVISION=${{ github.sha }}

      - name: Output image info
        run: |
          echo "🎉 构建完成！"
          echo "📦 镜像标签:"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.branch.outputs.branch }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.branch.outputs.branch }}-${{ steps.branch.outputs.short-sha }}"
          echo ""
          echo "🚀 快速部署命令:"
          echo "docker run -d -p 80:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.branch.outputs.branch }}"